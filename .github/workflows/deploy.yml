# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages and security scanning
permissions:
  contents: read
  pages: write
  id-token: write
  security-events: write  # This permission is necessary for uploading security scan results

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Security Vulnerability Scanning job using CodeQL
  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up CodeQL
        uses: github/codeql-action/init@v2

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # New job for lightweight validation
  validate:
    name: Validate Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check for README.md
        run: |
          if [ ! -f "README.md" ]; then
            echo "Error: README.md is missing!" >&2
            exit 1
          fi
          echo "README.md found!"
      
      - name: Validate HTML files
        run: |
          if ! find . -name "*.html" | grep -q .; then
            echo "Error: No HTML files found!" >&2
            exit 1
          fi
          echo "HTML files found!"

  # New job for broken link testing
  check-broken-links:
    name: Broken Link Testing
    runs-on: ubuntu-latest
    needs: validate  # This job depends on the validate job
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Broken Link Testing
        uses: lycheeverse/lychee-action@v1
        with:
          args: --verbose
          output: "lychee-output.txt"

  # Single deploy job since we're just deploying
  deploy:
    name: Deploy to GitHub Pages
    needs: [validate, security-scan] # Ensure validate and security-scan jobs complete successfully first
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: "."
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        